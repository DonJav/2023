apiVersion: batch/v1
kind: Job
metadata:
  name: "{{stack_name}}"
  namespace: "{{namespace}}"
  labels:
    stackName: "{{stack_name}}"
    unitName: "{{unit_name}}"
    version: "{{version}}"
    nelson: "true"
spec:
  {{#desired_instances}}
  completions: {{desired_instances}}
  {{/desired_instances}}
  {{^desired_instances}}
  completions: 1
  {{/desired_instances}}
  {{#retries}}
  backoffLimit: {{retries}}
  {{/retries}}
  {{^retries}}
  backoffLimit: 3
  {{/retries}}
  template:
    metadata:
      name: "{{stack_name}}"
      labels:
        stackName: "{{stack_name}}"
        unitName: "{{unit_name}}"
        version: "{{version}}"
        nelson: "true"
    spec:
      containers:
      - name: "{{stack_name}}"
        image: "{{image}}"
        {{#envvars}}
        env:
        {{#envvars_list}}
        - name: "{{envvar_name}}"
          value: "{{envvar_value}}"
        {{/envvars_list}}
        {{/envvars}}
        {{!
        This comment serves as both a hack and actual docs.

        The hack is Scalate currently seems to have a bug with indentation,
        ticket filed: https://github.com/scalate/scalate/issues/196
        Having some Mustache thing in between the lines in question seems
        to insert whitespace in between and resets the indentation or something.

        As for actual docs.. the dance with the guards is to implement what
        used to be implemented in code, but with Mustache templating. Resource
        requests are set like so:

        1. If a memory request is specified, use that
        2. If not, use the memory limit. This is the default behavior of Kubernetes
           but we re-implement it here to keep the template clean.. or as clean as
           a template can be.
        3. If memory limit is not specified, use the (old) default values.
        }}
        resources:
          requests:
            {{#memory_request}}
            memory: "{{memory_request}}M"
            {{/memory_request}}
            {{^memory_request}}
            {{#memory_limit}}
            memory: "{{memory_limit}}M"
            {{/memory_limit}}
            {{^memory_limit}}
            memory: "512M"
            {{/memory_limit}}
            {{/memory_request}}
            {{#cpu_request}}
            cpu: {{cpu_request}}
            {{/cpu_request}}
            {{^cpu_request}}
            {{#cpu_limit}}
            cpu: {{cpu_limit}}
            {{/cpu_limit}}
            {{^cpu_limit}}
            cpu: 0.5
            {{/cpu_limit}}
            {{/cpu_request}}
          {{! Hack around Scalate #196 }}
          limits:
            {{#memory_limit}}
            memory: "{{memory_limit}}M"
            {{/memory_limit}}
            {{^memory_limit}}
            memory: "512M"
            {{/memory_limit}}
            {{#cpu_limit}}
            cpu: {{cpu_limit}}
            {{/cpu_limit}}
            {{^cpu_limit}}
            cpu: 0.5
            {{/cpu_limit}}
        {{! Hack around Scalate #196 }}
        {{#empty_volumes}}
        volumeMounts:
        {{#empty_volumes_list}}
        - name: "{{empty_volume_mount_name}}"
          mountPath: "{{empty_volume_mount_path}}"
        {{/empty_volumes_list}}
        {{/empty_volumes}}
      {{#empty_volumes}}
      {{! Hack around Scalate #196 }}
      volumes:
      {{#empty_volumes_list}}
      - name: "{{empty_volume_mount_name}}"
        emptyDir: {}
      {{/empty_volumes_list}}
      {{/empty_volumes}}
      {{! Hack around Scalate #196 }}
      restartPolicy: "Never"
